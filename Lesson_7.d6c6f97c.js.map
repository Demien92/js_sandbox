{"version":3,"sources":["color.js","index.js"],"names":["Color","r","g","b","Object","assign","result","key","push","Math","round","toString","each","keys","reduce","sum","item","length","getLightness","value","abs","random","obj","color","fn","index","parseInt","str","val","replace","split","toNumber","MiniSlider","id","iterator","hideAll","show","createButtons","setAttribute","query","children","addEventListener","next","bind","target","position","nodesImg","style","opacity","showAll","classList","add","type","className","i","appendChild","document","createElement","event","isButton","tagName","loop","prev","setBorderColor","remove","borderColor","node","querySelector","list","attr"],"mappings":";AAqDK,aAAA,SAAA,EAAA,EAAA,GAAA,KAAA,aAAA,GAAA,MAAA,IAAA,UAAA,qCAAA,SAAA,EAAA,EAAA,GAAA,IAAA,IAAA,EAAA,EAAA,EAAA,EAAA,OAAA,IAAA,CAAA,IAAA,EAAA,EAAA,GAAA,EAAA,WAAA,EAAA,aAAA,EAAA,EAAA,cAAA,EAAA,UAAA,IAAA,EAAA,UAAA,GAAA,OAAA,eAAA,EAAA,EAAA,IAAA,IAAA,SAAA,EAAA,EAAA,EAAA,GAAA,OAAA,GAAA,EAAA,EAAA,UAAA,GAAA,GAAA,EAAA,EAAA,GAAA,EAAA,OAAA,eAAA,QAAA,aAAA,CAAA,OAAA,IAAA,QAAA,aAAA,EArDgBA,IAAAA,EAqDhB,WApDWC,SAAAA,EAAAA,EAAEC,EAAEC,GAAG,EAAA,KAAA,GACfC,OAAOC,OAAO,KAAM,CAAEJ,EAAAA,EAAGC,EAAAA,EAAGC,EAAAA,IAmD/B,OAAA,EAAA,EAAA,CAAA,CAAA,IAAA,WAhDU,MAAA,WACDG,IAAAA,EAAS,GACV,IAAA,IAAIC,KAAO,KACZD,EAAOE,KAAKC,KAAKC,MAAM,KAAKH,KAGlBD,MAAAA,OAAAA,OAAAA,EAAOK,WAArB,OA0CH,CAAA,IAAA,UAjCS,MAAA,WACNX,EAAMY,KAAK,KAAM,IAAK,QAgCzB,CAAA,IAAA,UA7BS,MAAA,WACNZ,EAAMY,KAAK,KAAM,MAAO,QA4B3B,CAAA,IAAA,eAzBc,MAAA,WAAA,IAAA,EAAA,KACJR,OAAAA,OAAOS,KAAK,MACdC,OAAO,SAACC,EAAKC,GAASD,OAAAA,EAAM,EAAKC,IAAM,GAAKZ,OAAOS,KAAK,MAAMI,SAuBtE,CAAA,IAAA,cApBa,MAAA,WACVjB,EAAMY,KAAK,KAAM,KAAKM,kBAmBzB,CAAA,IAAA,SAhBQ,MAAA,WACLlB,EAAMY,KAAK,KAAM,KAAM,SAACO,GAAU,OAAA,IAAMA,MAe3C,CAAA,IAAA,SAZQ,MAAA,WAEE,OADPnB,EAAMY,KAAK,KAAM,KAAM,WAAKH,OAAAA,KAAKW,KAAqB,IAAjBX,KAAKY,YACnC,QAUV,CAAA,CAAA,IAAA,OAvCWC,MAAAA,SAAAA,EAAKC,EAAOC,GACf,IAAA,IAAIjB,KAAOe,EACZA,EAAIf,GAAOgB,GAASC,EAAGF,EAAIf,MAqClC,CAAA,IAAA,WAPeY,MAAAA,SAAAA,EAAOM,GACZC,OAAAA,SAASP,EAAMM,MAMzB,CAAA,IAAA,aAHiBE,MAAAA,SAAAA,GACRC,IAAAA,EAAMD,EAAIE,QAAQ,WAAY,IAAIC,MAAM,KACvC,OAAA,IAAI9B,EAAMA,EAAM+B,SAASH,EAAK,GAAI5B,EAAM+B,SAASH,EAAK,GAAI5B,EAAM+B,SAASH,EAAK,QACxF,EAAA,GAAA,QAAA,QAAA;;ACzBA,aA5BL,IAAA,EAAA,EAAA,QAAA,YA4BK,SAAA,EAAA,GAAA,OAAA,GAAA,EAAA,WAAA,EAAA,CAAA,QAAA,GAAA,SAAA,EAAA,EAAA,GAAA,KAAA,aAAA,GAAA,MAAA,IAAA,UAAA,qCAAA,SAAA,EAAA,EAAA,GAAA,IAAA,IAAA,EAAA,EAAA,EAAA,EAAA,OAAA,IAAA,CAAA,IAAA,EAAA,EAAA,GAAA,EAAA,WAAA,EAAA,aAAA,EAAA,EAAA,cAAA,EAAA,UAAA,IAAA,EAAA,UAAA,GAAA,OAAA,eAAA,EAAA,EAAA,IAAA,IAAA,SAAA,EAAA,EAAA,EAAA,GAAA,OAAA,GAAA,EAAA,EAAA,UAAA,GAAA,GAAA,EAAA,EAAA,GAAA,EA1BCI,IAAAA,EA0BD,WAzBWC,SAAAA,EAAAA,GAAI,EAAA,KAAA,GACPC,KAAAA,SAAW,EACXD,KAAAA,GAAmB,iBAAPA,EAAkBA,EAAK,aAEnCE,KAAAA,UACAC,KAAAA,KAAK,GAAG,GACRC,KAAAA,cAAc,SAAU,CAAC,sBAAuB,wBACrDL,EAAWM,aAAaN,EAAWO,MAAS,GAAA,OAAA,KAAKN,GAAeO,cAAAA,SAAU,CAAC,eAAe,iBAC1FR,EAAWO,MAAS,GAAA,OAAA,KAAKN,KAAMQ,iBAAiB,QAAS,KAAKC,KAAKC,KAAK,OAiB3E,OAAA,EAAA,EAAA,CAAA,CAAA,IAAA,OAEIC,MAAAA,SAAAA,EAAQC,GACJX,KAAAA,SAAWW,EACXV,KAAAA,UACAC,KAAAA,KAAK,KAAKF,YALlB,CAAA,IAAA,UAQQ,MAAA,WACCY,IAAAA,EAAWd,EAAWO,MAAS,GAAA,OAAA,KAAKN,GAAeO,cAAAA,SADpD,GAAA,EAAA,GAAA,EAAA,OAAA,EAAA,IAGWM,IAAAA,IAAU,EAAVA,EAAAA,EAAU,OAAA,cAAA,GAAA,EAAA,EAAA,QAAA,MAAA,GAAA,EAAA,CAAA,EAAA,MAClBC,MAAMC,QAAU,KAJnB,MAAA,GAAA,GAAA,EAAA,EAAA,EAAA,QAAA,IAAA,GAAA,MAAA,EAAA,QAAA,EAAA,SAAA,QAAA,GAAA,EAAA,MAAA,MARR,CAAA,IAAA,OAgBIvB,MAAAA,SAAAA,EAAOwB,GACJA,GAAAA,EAAAA,CAAS,IAAA,GAAA,EAAA,GAAA,EAAA,OAAA,EAAA,IAEOjB,IAAAA,IAAkD,EAAlDA,EAAAA,EAAWO,MAAS,GAAA,OAAA,KAAKN,GAAeO,cAAAA,SAAU,OAAA,cAAA,GAAA,EAAA,EAAA,QAAA,MAAA,GAAA,EAAA,CAAzDZ,IAAAA,EAAyD,EAAA,MAC9DA,EAAImB,MAAQ,GACZnB,EAAIsB,UAAUC,IAAI,YAJb,MAAA,GAAA,GAAA,EAAA,EAAA,EAAA,QAAA,IAAA,GAAA,MAAA,EAAA,QAAA,EAAA,SAAA,QAAA,GAAA,EAAA,MAAA,SASbnB,EAAWO,MAAS,GAAA,OAAA,KAAKN,GAAeO,cAAAA,SAASf,GAAOsB,MAAMC,QAAU,MA1B3E,CAAA,IAAA,gBA6BaI,MAAAA,SAAAA,EAAMC,GACX,IAAA,IAAIC,EAAI,EAAGA,EAAI,EAAGA,GAAG,EACtBtB,EAAWO,MAAS,GAAA,OAAA,KAAKN,GAAesB,cAAAA,YAAYC,SAASC,cAAcL,IAAOC,UAAYA,EAAUC,KA/B/G,CAAA,IAAA,OAmCII,MAAAA,SAAAA,GACKd,IAAAA,EAASc,EAAMd,OACfe,EAA8B,WAAnBf,EAAOgB,QAEpBD,GAA0B,iBAAdf,EAAOX,GACf,KAAKC,SAAWF,EAAWO,MAAS,GAAA,OAAA,KAAKN,GAAeO,cAAAA,SAASvB,OAAS,GACrEkB,KAAAA,UACAC,KAAAA,KAAK,KAAKF,UAAU,IAEpB2B,KAAAA,KAAKjB,EAAQ,GAGjBkB,KAAAA,KAAKlB,EAAQe,GAEtBA,GAAW3B,EAAW+B,eAAenB,KAjDxC,CAAA,IAAA,OAoDIA,MAAAA,SAAAA,EAAQe,GACLA,GAA0B,iBAAdf,EAAOX,KACf,KAAKC,SAAW,GACXC,KAAAA,UACAC,KAAAA,KAAK,KAAKF,UAAU,IAEpB2B,KAAAA,KAAKjB,EAAQZ,EAAWO,MAAS,GAAA,OAAA,KAAKN,GAAeO,cAAAA,SAASvB,OAAS,IAIpF0C,GAAW3B,EAAW+B,eAAenB,KA9DxC,CAAA,IAAA,UAiES,MAAA,WACNZ,EAAWO,MAAS,GAAA,OAAA,KAAKN,GAAe+B,cAAAA,SACnC5B,KAAAA,KAAK,MAAM,MAnEnB,CAAA,CAAA,IAAA,iBAdqBQ,MAAAA,SAAAA,GAClBA,EAAOG,MAAMkB,aAAc,IAAIjE,EAAJ,SAAYqB,SAASV,aAanD,CAAA,IAAA,QAVYuD,MAAAA,SAAAA,GACFV,OAAAA,SAASW,cAAcD,KASjC,CAAA,IAAA,eANmBE,MAAAA,SAAAA,EAAMC,GAEjB,IAAA,IAAIf,EAAI,EAAGA,EAAIc,EAAKnD,OAAQqC,GAAG,EAAG,CACrBc,EAAKd,GACbhB,aAAa,KAAM+B,EAAKf,SAErC,EAAA","file":"Lesson_7.d6c6f97c.js","sourceRoot":"..","sourcesContent":["export default class Color {\r\n    constructor(r,g,b) {\r\n        Object.assign(this, { r, g, b });\r\n    }\r\n\r\n    toString() {\r\n        const result = [];\r\n        for (let key in this) {\r\n            result.push(Math.round(this[key]));\r\n        }\r\n\r\n        return `rgb(${result.toString()})`;\r\n    }\r\n\r\n    static each(obj, color, fn) {\r\n        for (let key in obj) {\r\n            obj[key] = color || fn(obj[key]);\r\n        }\r\n    }\r\n\r\n    toBlack() {\r\n        Color.each(this, '0', null);\r\n    }\r\n\r\n    toWhite() {\r\n        Color.each(this, '255', null);\r\n    }\r\n\r\n    getLightness() {\r\n        return Object.keys(this)\r\n            .reduce((sum, item) => sum + this[item],0) / Object.keys(this).length;\r\n    }\r\n\r\n    toGrayscale() {\r\n        Color.each(this, this.getLightness());\r\n    }\r\n\r\n    invert() {\r\n        Color.each(this, null, (value) => 255 - value);\r\n    }\r\n\r\n    random() {\r\n        Color.each(this, null, ()=> Math.abs(Math.random() * (0 - 255)));\r\n        return this;\r\n    }\r\n\r\n    static toNumber(value, index) {\r\n        return parseInt(value[index]);\r\n    }\r\n\r\n    static fromString(str) {\r\n        const val = str.replace(/[^0-9,]/g, \"\").split(',');\r\n        return new Color(Color.toNumber(val, 0), Color.toNumber(val, 1), Color.toNumber(val, 2));\r\n    }\r\n}","import Color from './color';\r\n\r\nclass MiniSlider {\r\n    constructor(id) {\r\n        this.iterator = 0;\r\n        this.id = typeof id === 'string' ? id : '#container';\r\n\r\n        this.hideAll();\r\n        this.show(0, false);\r\n        this.createButtons('button', ['control-button_prev', 'control-button_next']);\r\n        MiniSlider.setAttribute(MiniSlider.query(`${this.id} .control`).children, ['control-prev','control-next']);\r\n        MiniSlider.query(`${this.id}`).addEventListener('click', this.next.bind(this));\r\n    }\r\n\r\n    static setBorderColor(target) {\r\n        target.style.borderColor = new Color().random().toString();\r\n    }\r\n\r\n    static query(node) {\r\n        return document.querySelector(node);\r\n    }\r\n\r\n    static setAttribute(list, attr) {\r\n\r\n        for (let i = 0; i < list.length; i+=1) {\r\n            const value = list[i];\r\n            value.setAttribute('id', attr[i]);\r\n        }\r\n    }\r\n\r\n    loop(target, position) {\r\n        this.iterator = position;\r\n        this.hideAll();\r\n        this.show(this.iterator);\r\n    }\r\n\r\n    hideAll(){\r\n        const nodesImg = MiniSlider.query(`${this.id} .wrapper`).children;\r\n\r\n        for (let val of nodesImg) {\r\n            val.style.opacity = '0';\r\n        }\r\n    }\r\n\r\n    show(index, showAll) {\r\n        if (showAll) {\r\n\r\n            for (let val of MiniSlider.query(`${this.id} .wrapper`).children) {\r\n                val.style = '';\r\n                val.classList.add('restore');\r\n            }\r\n            return;\r\n        }\r\n\r\n        MiniSlider.query(`${this.id} .wrapper`).children[index].style.opacity = '1';\r\n    }\r\n\r\n    createButtons(type, className) {\r\n        for (let i = 0; i < 2; i+=1) {\r\n            MiniSlider.query(`${this.id} .control`).appendChild(document.createElement(type)).className = className[i];\r\n        }\r\n    }\r\n\r\n    next(event) {\r\n        const target = event.target;\r\n        const isButton = target.tagName === 'BUTTON';\r\n\r\n        if (isButton && target.id === 'control-next') {\r\n            if (this.iterator < MiniSlider.query(`${this.id} .wrapper`).children.length - 1) {\r\n                this.hideAll();\r\n                this.show(this.iterator+=1);\r\n            } else {\r\n                this.loop(target, 0);\r\n            }\r\n        } else {\r\n            this.prev(target, isButton);\r\n        }\r\n        isButton ? MiniSlider.setBorderColor(target) : null;\r\n    }\r\n\r\n    prev(target, isButton) {\r\n        if (isButton && target.id !== 'control-next') {\r\n            if (this.iterator > 0) {\r\n                this.hideAll();\r\n                this.show(this.iterator-=1);\r\n            } else {\r\n                this.loop(target, MiniSlider.query(`${this.id} .wrapper`).children.length - 1);\r\n            }\r\n        }\r\n\r\n        isButton ? MiniSlider.setBorderColor(target) : null;\r\n    }\r\n\r\n    destroy() {\r\n        MiniSlider.query(`${this.id} .control`).remove();\r\n        this.show(null, true);\r\n    }\r\n}"]}